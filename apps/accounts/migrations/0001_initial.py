# Generated by Django 4.2.7 on 2024-09-20 03:26

import django.contrib.auth.validators
from django.db import migrations, models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserAccount',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('username', models.CharField(error_messages={'unique': 'Nombre de usuario o CI ya existe.'}, max_length=255, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()])),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, unique=True)),
                ('ci', models.BooleanField(default=False)),
                ('full_name', models.CharField(default='', max_length=355)),
                ('email', models.EmailField(blank=True, max_length=150, null=True)),
                ('phone', models.CharField(blank=True, default='', max_length=15, null=True)),
                ('financial_condition', models.CharField(choices=[('Normal', 'normal'), ('Plan de Pagos', 'plan')], default='Normal', max_length=17)),
                ('role', models.CharField(choices=[('Fraterno', 'fraterno'), ('Admin', 'admin'), ('Tesorero', 'tesorero'), ('Encargado', 'encargado')], default='Fraterno', max_length=15)),
                ('copy_ci', models.BooleanField(default=False)),
                ('avatar', models.BooleanField(default=False)),
                ('suspend', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_admin', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('verified', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
